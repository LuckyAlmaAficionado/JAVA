/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javatelegram;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.logging.ConsoleHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.telegram.telegrambots.TelegramApiException;
import org.telegram.telegrambots.TelegramBotsApi;
import org.telegram.telegrambots.logging.BotLogger;
import org.telegram.telegrambots.logging.BotsFileHandler;

/**
 *
 * @author Lucky
 */
public class frmTelegram extends javax.swing.JFrame {

    /**
     * Creates new form frmTelegram
     */
    public frmTelegram() {
        initComponents();
        //Image frameIcon = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("/resources/laravel.png"));
        //this.setIconImage(frameIcon);
    }

        public static void getMsg(String id, String msg, String name){
        String pesan = null;
        MyProjectHandler Send = new MyProjectHandler();
        if (msg.contains("/start")) {
            pesan = "Hallo " + name + " Apakabar?, Selamat mencoba bot ini ya :)";
            pesan += "\nUntuk menampilkan command yang tersedia silahkan gunakan /info";
            Send.sendPesan(id, pesan);
            lstPesan.add("Send to : " + id +", Pesan : " + pesan);
        }else if(msg.contains("/info")){
            pesan += "Hallo " + name + ", ini adalah command yang mungkin bisa kamu gunakan :)";
            pesan += "\n/info // untuk menampilkan seluruh command yang tersedia";
            pesan += "\n/developer // untuk menampilkan nama pembuat aplikasi ini";
            pesan += "\n/sapa // untuk menyapa user";
            pesan += "\n/3";
            pesan += "\n/4";
            pesan += "\n/5";            Send.sendPesan(id, pesan);
            lstPesan.add("Send to : " + id +", Pesan : " + pesan);
        }else if(msg.contains("/developer")){
            pesan = "Aliv Okta Aseda";
            Send.sendPesan(id, pesan);
            lstPesan.add("Send to : " + id +", Pesan : " + pesan);
        }else if(msg.contains("/sapa")){
            pesan = "Selamat pagi " + name + ", Semoga hari anda menyenangkan :)";
            Send.sendPesan(id, pesan);
            lstPesan.add("Send to : " + id +", Pesan : " + pesan);
        }else if(msg.contains("/3")){
            pesan = "Selamat pagi";
            Send.sendPesan(id, pesan);
            lstPesan.add("Send to : " + id +", Pesan : " + pesan);
        }else if(msg.contains("/4")){
            pesan = "Selamat pagi";
            Send.sendPesan(id, pesan);
            lstPesan.add("Send to : " + id +", Pesan : " + pesan);
        }else if(msg.contains("/5")){
            pesan = "Selamat pagi";
            Send.sendPesan(id, pesan);
            lstPesan.add("Send to : " + id +", Pesan : " + pesan);
        }else{
            Send.sendPesan(id, pesan);
            lstPesan.add("Send to : " + id +", Pesan : " + pesan);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lstPesan = new java.awt.List();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lstPesan, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lstPesan, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTelegram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTelegram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTelegram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTelegram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTelegram().setVisible(true);
                BotLogger.setLevel(Level.ALL);
                BotLogger.registerLogger(new ConsoleHandler());
                try{
                    BotLogger.registerLogger(new BotsFileHandler());
                } catch (IOException ex) {
                    Logger.getLogger(frmTelegram.class.getName()).log(Level.SEVERE, null, ex);
                }
                try{
                    TelegramBotsApi telegramBotApi = createTelegramBotsApi();
                    try{
                        telegramBotApi.registerBot(new MyProjectHandler(){});
                    } catch (TelegramApiException e){

                    }
                } catch (Exception e){
                    
                }
            }
        });
    }
    
    private static TelegramBotsApi createTelegramBotsApi() throws TelegramApiException {
        TelegramBotsApi telegramBotsApi;
        telegramBotsApi = createLongPollingTelegramBotsApi();
        return telegramBotsApi;
    }
    
    private static TelegramBotsApi createLongPollingTelegramBotsApi(){
        return new TelegramBotsApi();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static java.awt.List lstPesan;
    // End of variables declaration//GEN-END:variables
}
